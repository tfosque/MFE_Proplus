"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const user_1 = require("../validation/user");
const utils_1 = require("../utils");
exports.default = {
    async getMe(ctx) {
        const userInfo = (0, utils_1.getService)('user').sanitizeUser(ctx.state.user);
        ctx.body = {
            data: userInfo,
        };
    },
    async updateMe(ctx) {
        const input = ctx.request.body;
        await (0, user_1.validateProfileUpdateInput)(input);
        const userService = (0, utils_1.getService)('user');
        const authServer = (0, utils_1.getService)('auth');
        const { currentPassword, ...userInfo } = input;
        if (currentPassword && userInfo.password) {
            const isValid = await authServer.validatePassword(currentPassword, ctx.state.user.password);
            if (!isValid) {
                return ctx.badRequest('ValidationError', {
                    currentPassword: ['Invalid credentials'],
                });
            }
        }
        const updatedUser = await userService.updateById(ctx.state.user.id, userInfo);
        ctx.body = {
            data: userService.sanitizeUser(updatedUser),
        };
    },
    async getOwnPermissions(ctx) {
        const { findUserPermissions, sanitizePermission } = (0, utils_1.getService)('permission');
        const { user } = ctx.state;
        const userPermissions = await findUserPermissions(user);
        ctx.body = {
            // @ts-expect-error
            data: userPermissions.map(sanitizePermission),
        };
    },
};
//# sourceMappingURL=authenticated-user.js.map