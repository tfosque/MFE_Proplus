"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@strapi/utils");
const _1 = __importDefault(require("."));
/**
 * @typedef ConditionProviderOverride
 * @property {function(CreateConditionPayload)} register
 * @property {function(attributes CreateConditionPayload[]): Promise<this>} registerMany
 */
/**
 * Creates a new instance of a condition provider
 * @return {Provider & ConditionProviderOverride}
 */
const createConditionProvider = () => {
    const provider = (0, utils_1.providerFactory)();
    return {
        ...provider,
        async register(conditionAttributes) {
            if (strapi.isLoaded) {
                throw new Error(`You can't register new conditions outside of the bootstrap function.`);
            }
            const condition = _1.default.create(conditionAttributes);
            return provider.register(condition.id, condition);
        },
        async registerMany(conditionsAttributes) {
            for (const attributes of conditionsAttributes) {
                await this.register(attributes);
            }
            return this;
        },
    };
};
exports.default = createConditionProvider;
//# sourceMappingURL=provider.js.map