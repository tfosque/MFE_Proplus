"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasValidTokenSalt = exports.isDisabledFromEnv = exports.isDataTransferEnabled = void 0;
const utils_1 = require("@strapi/utils");
const utils_2 = require("../../utils");
/**
 * Returns whether the data transfer features have been disabled from the env configuration
 */
const isDisabledFromEnv = () => {
    return utils_1.env.bool('STRAPI_DISABLE_REMOTE_DATA_TRANSFER', false);
};
exports.isDisabledFromEnv = isDisabledFromEnv;
/**
 * A valid transfer token salt must be a non-empty string defined in the Strapi config
 */
const hasValidTokenSalt = () => {
    const salt = strapi.config.get('admin.transfer.token.salt', null);
    return typeof salt === 'string' && salt.length > 0;
};
exports.hasValidTokenSalt = hasValidTokenSalt;
/**
 * Checks whether data transfer features are enabled
 */
const isDataTransferEnabled = () => {
    const { utils } = (0, utils_2.getService)('transfer');
    return !utils.isDisabledFromEnv() && utils.hasValidTokenSalt();
};
exports.isDataTransferEnabled = isDataTransferEnabled;
//# sourceMappingURL=utils.js.map