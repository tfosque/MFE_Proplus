/**
 * hashes a password
 * @param {string} password - password to hash
 * @returns {string} hashed password
 */
declare const hashPassword: (password: string) => Promise<string>;
/**
 * Validate a password
 * @param {string} password
 * @param {string} hash
 * @returns {Promise<boolean>} is the password valid
 */
declare const validatePassword: (password: string, hash: string) => Promise<boolean>;
/**
 * Check login credentials
 * @param {Object} options
 * @param {string} options.email
 * @param {string} options.password
 */
declare const checkCredentials: ({ email, password }: {
    email: string;
    password: string;
}) => Promise<any[]>;
/**
 * Send an email to the user if it exists or do nothing
 * @param {Object} param params
 * @param {string} param.email user email for which to reset the password
 */
declare const forgotPassword: ({ email }?: {
    email: string;
}) => Promise<any>;
/**
 * Reset a user password
 * @param {Object} param params
 * @param {string} param.resetPasswordToken token generated to request a password reset
 * @param {string} param.password new user password
 */
declare const resetPassword: ({ resetPasswordToken, password }?: {
    resetPasswordToken: string;
    password: string;
}) => Promise<any>;
export { checkCredentials, validatePassword, hashPassword, forgotPassword, resetPassword };
