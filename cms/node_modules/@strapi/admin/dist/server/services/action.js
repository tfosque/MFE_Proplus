"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllowedActionsForRole = void 0;
const fp_1 = require("lodash/fp");
const utils_1 = require("@strapi/utils");
const utils_2 = require("../utils");
const constants_1 = require("./constants");
const { NotFoundError } = utils_1.errors;
// TODO: move actionProvider here instead of in the permission service
/**
 * Returns actions available for a role.
 * @param {string|number} roleId
 * @returns {object[]}
 */
const getAllowedActionsForRole = async (roleId) => {
    const { actionProvider } = (0, utils_2.getService)('permission');
    if (!(0, fp_1.isNil)(roleId)) {
        const role = await (0, utils_2.getService)('role').findOne({ id: roleId });
        if (!role) {
            throw new NotFoundError('role.notFound');
        }
        if (role.code === constants_1.AUTHOR_CODE) {
            return actionProvider.values().filter(({ actionId }) => actionId !== constants_1.PUBLISH_ACTION);
        }
    }
    return actionProvider.values();
};
exports.getAllowedActionsForRole = getAllowedActionsForRole;
//# sourceMappingURL=action.js.map