"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const admin_1 = __importDefault(require("@strapi/admin"));
const utils_1 = require("@strapi/utils");
const get_enabled_plugins_1 = require("../../../core/loaders/plugins/get-enabled-plugins");
const addSlash_1 = __importDefault(require("../../../utils/addSlash"));
const index_1 = __importDefault(require("../../../index"));
exports.default = async ({ browser }) => {
    const appContext = await index_1.default.compile();
    const strapiInstance = (0, index_1.default)({
        ...appContext,
        autoReload: true,
        serveAdminPanel: false,
    });
    const plugins = await (0, get_enabled_plugins_1.getEnabledPlugins)(strapiInstance, { client: true });
    const { adminPath } = (0, utils_1.getConfigUrls)(strapiInstance.config, true);
    const adminPort = strapiInstance.config.get('admin.port', 8000);
    const adminHost = strapiInstance.config.get('admin.host', 'localhost');
    const backendURL = (0, utils_1.getAbsoluteServerUrl)(strapiInstance.config, true);
    admin_1.default.watchAdmin({
        appDir: appContext.appDir,
        buildDestDir: appContext.distDir,
        plugins,
        port: adminPort,
        host: adminHost,
        browser,
        options: {
            backend: backendURL,
            adminPath: (0, addSlash_1.default)(adminPath),
        },
    });
};
//# sourceMappingURL=action.js.map