"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/no-var-requires */
const path_1 = require("path");
const fs_extra_1 = require("fs-extra");
const ora_1 = __importDefault(require("ora"));
const execa_1 = __importDefault(require("execa"));
const package_path_1 = __importDefault(require("../../../load/package-path"));
exports.default = async (plugins) => {
    const loader = (0, ora_1.default)();
    const dir = process.cwd();
    const version = require((0, path_1.join)(dir, 'package.json')).dependencies['@strapi/strapi'];
    const pluginArgs = plugins.map((name) => `@strapi/plugin-${name}@${version}`);
    try {
        loader.start(`Installing dependencies`);
        const useYarn = (0, fs_extra_1.existsSync)((0, path_1.join)(dir, 'yarn.lock'));
        if (useYarn) {
            await (0, execa_1.default)('yarn', ['add', ...pluginArgs]);
        }
        else {
            await (0, execa_1.default)('npm', ['install', '--save', ...pluginArgs]);
        }
        loader.succeed();
        // check if rebuild is necessary
        let shouldRebuild = false;
        for (const name of plugins) {
            const pkgPath = (0, package_path_1.default)(`@strapi/plugin-${name}`);
            if ((0, fs_extra_1.existsSync)((0, path_1.join)(pkgPath, 'admin', 'src', 'index.js'))) {
                shouldRebuild = true;
            }
        }
        if (shouldRebuild) {
            loader.start(`Rebuilding admin UI`);
            await (0, execa_1.default)('npm', ['run', 'build']);
            loader.succeed();
        }
    }
    catch (err) {
        loader.clear();
        if (err instanceof Error) {
            console.error(err.message);
        }
        process.exit(1);
    }
};
//# sourceMappingURL=action.js.map