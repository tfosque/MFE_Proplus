"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@strapi/utils");
const fs_extra_1 = __importDefault(require("fs-extra"));
async function bootstrap({ strapi }) {
    strapi.config.port = strapi.config.get('server.port') || strapi.config.port;
    strapi.config.host = strapi.config.get('server.host') || strapi.config.host;
    const { serverUrl, adminUrl, adminPath } = (0, utils_1.getConfigUrls)(strapi.config);
    strapi.config.server = strapi.config.server || {};
    strapi.config.server.url = serverUrl;
    strapi.config.admin.url = adminUrl;
    strapi.config.admin.path = adminPath;
    // check if we should serve admin panel
    const shouldServeAdmin = strapi.config.get('admin.serveAdminPanel', strapi.config.get('serveAdminPanel'));
    if (!shouldServeAdmin) {
        strapi.config.serveAdminPanel = false;
    }
    // ensure public repository exists
    if (!(await fs_extra_1.default.pathExists(strapi.dirs.static.public))) {
        throw new Error(`The public folder (${strapi.dirs.static.public}) doesn't exist or is not accessible. Please make sure it exists.`);
    }
}
exports.default = bootstrap;
//# sourceMappingURL=bootstrap.js.map