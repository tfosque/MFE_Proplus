"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const fs_extra_1 = __importDefault(require("fs-extra"));
const utils_1 = require("@strapi/utils");
// TODO:: allow folders with index.js inside for bigger policies
async function loadPolicies(strapi) {
    const dir = strapi.dirs.dist.policies;
    if (!(await fs_extra_1.default.pathExists(dir))) {
        return;
    }
    const policies = {};
    const paths = await fs_extra_1.default.readdir(dir, { withFileTypes: true });
    for (const fd of paths) {
        const { name } = fd;
        const fullPath = (0, path_1.join)(dir, name);
        if (fd.isFile() && (0, path_1.extname)(name) === '.js') {
            const key = (0, path_1.basename)(name, '.js');
            policies[key] = (0, utils_1.importDefault)(fullPath);
        }
    }
    strapi.container.get('policies').add(`global::`, policies);
}
exports.default = loadPolicies;
//# sourceMappingURL=policies.js.map