"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const fs_1 = require("fs");
const utils_1 = require("@strapi/utils");
const srcSchema = utils_1.yup
    .object()
    .shape({
    bootstrap: utils_1.yup.mixed().isFunction(),
    register: utils_1.yup.mixed().isFunction(),
    destroy: utils_1.yup.mixed().isFunction(),
})
    .noUnknown();
const validateSrcIndex = (srcIndex) => {
    return srcSchema.validateSync(srcIndex, { strict: true, abortEarly: false });
};
exports.default = (strapi) => {
    if (!(0, fs_1.existsSync)(strapi.dirs.dist.src)) {
        return;
    }
    const pathToSrcIndex = (0, path_1.resolve)(strapi.dirs.dist.src, 'index.js');
    if (!(0, fs_1.existsSync)(pathToSrcIndex) || (0, fs_1.statSync)(pathToSrcIndex).isDirectory()) {
        return {};
    }
    const srcIndex = (0, utils_1.importDefault)(pathToSrcIndex);
    try {
        validateSrcIndex(srcIndex);
    }
    catch (e) {
        if (e instanceof utils_1.yup.ValidationError) {
            strapi.stopWithError({ message: `Invalid file \`./src/index.js\`: ${e.message}` });
        }
        throw e;
    }
    return srcIndex;
};
//# sourceMappingURL=src-index.js.map