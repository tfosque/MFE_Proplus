"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.security = void 0;
const fp_1 = require("lodash/fp");
const koa_helmet_1 = __importDefault(require("koa-helmet"));
const defaults = {
    crossOriginEmbedderPolicy: false,
    crossOriginOpenerPolicy: false,
    crossOriginResourcePolicy: false,
    originAgentCluster: false,
    contentSecurityPolicy: {
        useDefaults: true,
        directives: {
            'connect-src': ["'self'", 'https:'],
            'img-src': ["'self'", 'data:', 'blob:', 'https://market-assets.strapi.io'],
            'media-src': ["'self'", 'data:', 'blob:'],
            upgradeInsecureRequests: null,
        },
    },
    xssFilter: false,
    hsts: {
        maxAge: 31536000,
        includeSubDomains: true,
    },
    frameguard: {
        action: 'sameorigin',
    },
};
const security = (config, { strapi }) => (ctx, next) => {
    let helmetConfig = (0, fp_1.defaultsDeep)(defaults, config);
    const specialPaths = ['/documentation'];
    if (strapi.plugin('graphql')) {
        const { config: gqlConfig } = strapi.plugin('graphql');
        specialPaths.push(gqlConfig('endpoint'));
    }
    if (ctx.method === 'GET' && specialPaths.some((str) => ctx.path.startsWith(str))) {
        helmetConfig = (0, fp_1.merge)(helmetConfig, {
            contentSecurityPolicy: {
                directives: {
                    'script-src': ["'self'", "'unsafe-inline'", 'cdn.jsdelivr.net'],
                    'img-src': ["'self'", 'data:', 'cdn.jsdelivr.net', 'strapi.io'],
                },
            },
        });
    }
    return (0, koa_helmet_1.default)(helmetConfig)(ctx, next);
};
exports.security = security;
//# sourceMappingURL=security.js.map