"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fp_1 = require("lodash/fp");
const bcryptjs_1 = __importDefault(require("bcryptjs"));
const transforms = {
    password(value, context) {
        const { attribute } = context;
        if (attribute.type !== 'password') {
            throw new Error('Invalid attribute type');
        }
        if (!(0, fp_1.isString)(value) && !(value instanceof Buffer)) {
            return value;
        }
        const rounds = (0, fp_1.toNumber)((0, fp_1.getOr)(10, 'encryption.rounds', attribute));
        return bcryptjs_1.default.hashSync(value.toString(), rounds);
    },
};
exports.default = transforms;
//# sourceMappingURL=transforms.js.map