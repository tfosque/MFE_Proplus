"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
/**
 * create strapi fs layer
 */
exports.default = (strapi) => {
    function normalizePath(optPath) {
        const filePath = Array.isArray(optPath) ? optPath.join('/') : optPath;
        const normalizedPath = path_1.default.normalize(filePath).replace(/^\/?(\.\/|\.\.\/)+/, '');
        return path_1.default.resolve(strapi.dirs.app.root, normalizedPath);
    }
    const strapiFS = {
        /**
         * Writes a file in a strapi app
         * @param {Array|string} optPath - file path
         * @param {string} data - content
         */
        writeAppFile(optPath, data) {
            const writePath = normalizePath(optPath);
            return fs_extra_1.default.ensureFile(writePath).then(() => fs_extra_1.default.writeFile(writePath, data));
        },
        /**
         * Writes a file in a plugin extensions folder
         * @param {string} plugin - plugin name
         * @param {Array|string} optPath - path to file
         * @param {string} data - content
         */
        writePluginFile(plugin, optPath, data) {
            const newPath = ['extensions', plugin].concat(optPath).join('/');
            return strapiFS.writeAppFile(newPath, data);
        },
        /**
         * Removes a file in strapi app
         */
        removeAppFile(optPath) {
            const removePath = normalizePath(optPath);
            return fs_extra_1.default.remove(removePath);
        },
        /**
         * Appends a file in strapi app
         */
        appendFile(optPath, data) {
            const writePath = normalizePath(optPath);
            return fs_extra_1.default.appendFileSync(writePath, data);
        },
    };
    return strapiFS;
};
//# sourceMappingURL=fs.js.map